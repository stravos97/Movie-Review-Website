security:
    encoders:
        App\Entity\User:
            algorithm: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginAuthenticator
            logout:
                path: website_logout

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2592000

            switch_user: true

    role_hierarchy:
        ROLE_ADMIN: [ROLE_ADMIN_COMMENT, ROLE_ADMIN_ARTICLE, ROLE_ALLOWED_TO_SWITCH]
        ROLE_USER:  [ROLE_USER_COMMENT]
        ROLE_SUPER_ADMIN: [ROLE_SUPER_ADMIN_DELETEUSER, ROLE_SUPER_ADMIN_DISPLAY_USER]
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:

        # $ Used to to match this page only
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        #Require Authentication for every page
        #- { path: ^/, roles: IS_AUTHENTICATED_FULLY }
        #
        # The above two commands together require you to login to access any page.

        #If you don't care whether the user just logged in during the current session or before(using the remember me command)
        #you can use this to protect the more sensitive pages like change password 17
        #
        # if you wanted to force EVERY URL to be protected
        #- { path: ^/change-password, roles: IS_AUTHENTICATED_FULLY }
        #- { path: ^/, roles: IS_AUTHENTICATED_REMEMBERED }


        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

